{"ast":null,"code":"import React,{Component}from\"react\";import p5 from'p5';// シェーダファイルへのパス\nimport VERT_FILE from\"./main.vert\";import FRAG_FILE from\"./main.frag\";import{jsx as _jsx}from\"react/jsx-runtime\";class SampleSketch extends Component{constructor(props){super(props);this.sketchHandler=p=>{let theShader;// シェーダオブジェクト\nlet capture;// カメラのキャプチャ\nconst scl=0.8;p.preload=()=>{theShader=p.loadShader(VERT_FILE,FRAG_FILE);};p.windowResized=()=>{p.resizeCanvas(p.windowWidth*scl,p.windowHeight*scl,p.WEBGL);};p.setup=()=>{// メインキャンバスの作成\np.createCanvas(p.windowWidth*scl,p.windowHeight*scl,p.WEBGL);// 仮想キャンバスの作成\n// pg = p5.createGraphics(p5.width, p5.height);\n// Webカメラのキャプチャ開始\ncapture=p.createCapture(p.VIDEO);capture.hide();};p.draw=()=>{p.shader(theShader);theShader.setUniform(\"u_time\",p.frameCount/100);theShader.setUniform(\"u_Resolution\",[p.width,p.height]);theShader.setUniform(\"u_tex\",capture);// theShader.setUniform('u_color0', normalizeColors[0]);\n// theShader.setUniform('u_color1', normalizeColors[1]);\n// theShader.setUniform('u_color2', normalizeColors[2]);\n// theShader.setUniform('u_color3', normalizeColors[3]);\n// theShader.setUniform('u_color4', normalizeColors[4]);\np.rect(0,0,p.width,p.height);};};this.sketchRef=/*#__PURE__*/React.createRef();}componentDidMount(){this.sketch=new p5(this.sketchHandler,this.sketchRef.current);}componentWillUnmount(){this.sketch.remove();}render(){return/*#__PURE__*/_jsx(\"div\",{ref:this.sketchRef});}}export default SampleSketch;","map":{"version":3,"names":["React","Component","p5","VERT_FILE","FRAG_FILE","jsx","_jsx","SampleSketch","constructor","props","sketchHandler","p","theShader","capture","scl","preload","loadShader","windowResized","resizeCanvas","windowWidth","windowHeight","WEBGL","setup","createCanvas","createCapture","VIDEO","hide","draw","shader","setUniform","frameCount","width","height","rect","sketchRef","createRef","componentDidMount","sketch","current","componentWillUnmount","remove","render","ref"],"sources":["C:/Users/takum/Documents/GitHub/capture-sketch-test/src/SampleSketch.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport p5 from 'p5';\r\n\r\n// シェーダファイルへのパス\r\nimport VERT_FILE from \"./main.vert\"\r\nimport FRAG_FILE from \"./main.frag\"\r\n\r\nclass SampleSketch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sketchRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sketch = new p5(this.sketchHandler, this.sketchRef.current);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.sketch.remove();\r\n  }\r\n\r\n  sketchHandler = p => {\r\n    let theShader;  // シェーダオブジェクト\r\n    let capture;    // カメラのキャプチャ\r\n    const scl = 0.8;\r\n\r\n    p.preload = () => {\r\n      theShader = p.loadShader(VERT_FILE, FRAG_FILE);\r\n    };\r\n\r\n    p.windowResized = () => {\r\n      p.resizeCanvas(p.windowWidth * scl, p.windowHeight * scl, p.WEBGL);\r\n    }\r\n\r\n    p.setup = () => {\r\n      // メインキャンバスの作成\r\n      p.createCanvas(p.windowWidth * scl, p.windowHeight * scl, p.WEBGL);\r\n\r\n      // 仮想キャンバスの作成\r\n      // pg = p5.createGraphics(p5.width, p5.height);\r\n\r\n      // Webカメラのキャプチャ開始\r\n      capture = p.createCapture(p.VIDEO);\r\n      capture.hide();\r\n    };\r\n\r\n    p.draw = () => {\r\n      p.shader(theShader);\r\n\r\n      theShader.setUniform(\"u_time\", p.frameCount / 100);\r\n      theShader.setUniform(\"u_Resolution\", [p.width, p.height]);\r\n\r\n      theShader.setUniform(\"u_tex\", capture);\r\n\r\n      // theShader.setUniform('u_color0', normalizeColors[0]);\r\n      // theShader.setUniform('u_color1', normalizeColors[1]);\r\n      // theShader.setUniform('u_color2', normalizeColors[2]);\r\n      // theShader.setUniform('u_color3', normalizeColors[3]);\r\n      // theShader.setUniform('u_color4', normalizeColors[4]);\r\n\r\n      p.rect(0, 0, p.width, p.height);\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return <div ref={this.sketchRef}></div>;\r\n  }\r\n}\r\n\r\nexport default SampleSketch;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,EAAE,KAAM,IAAI,CAEnB;AACA,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,SAAS,KAAM,aAAa,QAAAC,GAAA,IAAAC,IAAA,yBAEnC,KAAM,CAAAC,YAAY,QAAS,CAAAN,SAAU,CACnCO,WAAWA,CAACC,KAAK,CAAE,CACjB,KAAK,CAACA,KAAK,CAAC,CAAC,KAYfC,aAAa,CAAGC,CAAC,EAAI,CACnB,GAAI,CAAAC,SAAS,CAAG;AAChB,GAAI,CAAAC,OAAO,CAAK;AAChB,KAAM,CAAAC,GAAG,CAAG,GAAG,CAEfH,CAAC,CAACI,OAAO,CAAG,IAAM,CAChBH,SAAS,CAAGD,CAAC,CAACK,UAAU,CAACb,SAAS,CAAEC,SAAS,CAAC,CAChD,CAAC,CAEDO,CAAC,CAACM,aAAa,CAAG,IAAM,CACtBN,CAAC,CAACO,YAAY,CAACP,CAAC,CAACQ,WAAW,CAAGL,GAAG,CAAEH,CAAC,CAACS,YAAY,CAAGN,GAAG,CAAEH,CAAC,CAACU,KAAK,CAAC,CACpE,CAAC,CAEDV,CAAC,CAACW,KAAK,CAAG,IAAM,CACd;AACAX,CAAC,CAACY,YAAY,CAACZ,CAAC,CAACQ,WAAW,CAAGL,GAAG,CAAEH,CAAC,CAACS,YAAY,CAAGN,GAAG,CAAEH,CAAC,CAACU,KAAK,CAAC,CAElE;AACA;AAEA;AACAR,OAAO,CAAGF,CAAC,CAACa,aAAa,CAACb,CAAC,CAACc,KAAK,CAAC,CAClCZ,OAAO,CAACa,IAAI,CAAC,CAAC,CAChB,CAAC,CAEDf,CAAC,CAACgB,IAAI,CAAG,IAAM,CACbhB,CAAC,CAACiB,MAAM,CAAChB,SAAS,CAAC,CAEnBA,SAAS,CAACiB,UAAU,CAAC,QAAQ,CAAElB,CAAC,CAACmB,UAAU,CAAG,GAAG,CAAC,CAClDlB,SAAS,CAACiB,UAAU,CAAC,cAAc,CAAE,CAAClB,CAAC,CAACoB,KAAK,CAAEpB,CAAC,CAACqB,MAAM,CAAC,CAAC,CAEzDpB,SAAS,CAACiB,UAAU,CAAC,OAAO,CAAEhB,OAAO,CAAC,CAEtC;AACA;AACA;AACA;AACA;AAEAF,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAE,CAAC,CAAEtB,CAAC,CAACoB,KAAK,CAAEpB,CAAC,CAACqB,MAAM,CAAC,CACjC,CAAC,CACH,CAAC,CApDC,IAAI,CAACE,SAAS,cAAGlC,KAAK,CAACmC,SAAS,CAAC,CAAC,CACpC,CAEAC,iBAAiBA,CAAA,CAAG,CAClB,IAAI,CAACC,MAAM,CAAG,GAAI,CAAAnC,EAAE,CAAC,IAAI,CAACQ,aAAa,CAAE,IAAI,CAACwB,SAAS,CAACI,OAAO,CAAC,CAClE,CAEAC,oBAAoBA,CAAA,CAAG,CACrB,IAAI,CAACF,MAAM,CAACG,MAAM,CAAC,CAAC,CACtB,CA6CAC,MAAMA,CAAA,CAAG,CACP,mBAAOnC,IAAA,QAAKoC,GAAG,CAAE,IAAI,CAACR,SAAU,CAAM,CAAC,CACzC,CACF,CAEA,cAAe,CAAA3B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}