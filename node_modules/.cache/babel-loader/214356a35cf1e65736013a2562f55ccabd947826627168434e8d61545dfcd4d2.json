{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\takum\\\\Documents\\\\GitHub\\\\capture-sketch-test\\\\src\\\\CameraCapture\\\\CameraCapture.js\";\nimport React, { Component } from \"react\";\nimport p5 from 'p5';\n\n// シェーダリスト\nimport { fileList } from \"./fileList\";\n\n// 利用するシェーダのインデックス\nimport { shaderIndex } from \"../../src/App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet canvas;\nexport default class SampleSketch extends Component {\n  constructor(props) {\n    super(props);\n    this.sketchHandler = p => {\n      let filterShaders = []; // シェーダオブジェクト\n      let capture; // カメラのキャプチャ\n      const scl = 0.8;\n      p.preload = () => {\n        fileList.forEach(fp => {\n          filterShaders.push(p.loadShader(fp[\"vert\"], fp[\"frag\"]));\n        });\n      };\n      p.windowResized = () => {\n        canvas = p.resizeCanvas(p.windowWidth * scl, p.windowHeight * scl, p.WEBGL);\n      };\n      p.setup = () => {\n        // メインキャンバスの作成\n        canvas = p.createCanvas(p.windowWidth * scl, p.windowHeight * scl, p.WEBGL);\n\n        // 仮想キャンバスの作成\n        // pg = p5.createGraphics(p5.width, p5.height);\n\n        // Webカメラのキャプチャ開始\n        capture = p.createCapture(p.VIDEO);\n        capture.hide();\n      };\n      p.draw = () => {\n        p.shader(filterShaders[shaderIndex]);\n        filterShaders[shaderIndex].setUniform(\"u_time\", p.frameCount / 100);\n        filterShaders[shaderIndex].setUniform(\"u_Resolution\", [p.width, p.height]);\n        filterShaders[shaderIndex].setUniform(\"u_tex\", capture);\n\n        // filterShaders.setUniform('u_color0', normalizeColors[0]);\n        // filterShaders.setUniform('u_color1', normalizeColors[1]);\n        // filterShaders.setUniform('u_color2', normalizeColors[2]);\n        // filterShaders.setUniform('u_color3', normalizeColors[3]);\n        // filterShaders.setUniform('u_color4', normalizeColors[4]);\n\n        p.rect(0, 0, p.width, p.height);\n      };\n    };\n    this.sketchRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    this.sketch = new p5(this.sketchHandler, this.sketchRef.current);\n  }\n  componentWillUnmount() {\n    this.sketch.remove();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.sketchRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport function saveImage() {\n  p5.saveCanvas(canvas);\n}","map":{"version":3,"names":["React","Component","p5","fileList","shaderIndex","jsxDEV","_jsxDEV","canvas","SampleSketch","constructor","props","sketchHandler","p","filterShaders","capture","scl","preload","forEach","fp","push","loadShader","windowResized","resizeCanvas","windowWidth","windowHeight","WEBGL","setup","createCanvas","createCapture","VIDEO","hide","draw","shader","setUniform","frameCount","width","height","rect","sketchRef","createRef","componentDidMount","sketch","current","componentWillUnmount","remove","render","ref","fileName","_jsxFileName","lineNumber","columnNumber","saveImage","saveCanvas"],"sources":["C:/Users/takum/Documents/GitHub/capture-sketch-test/src/CameraCapture/CameraCapture.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport p5 from 'p5';\r\n\r\n// シェーダリスト\r\nimport { fileList } from \"./fileList\";\r\n\r\n// 利用するシェーダのインデックス\r\nimport { shaderIndex } from \"../../src/App\"\r\n\r\nlet canvas;\r\n\r\nexport default class SampleSketch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sketchRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sketch = new p5(this.sketchHandler, this.sketchRef.current);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.sketch.remove();\r\n  }\r\n\r\n  sketchHandler = p => {\r\n    let filterShaders = []; // シェーダオブジェクト\r\n    let capture;        // カメラのキャプチャ\r\n    const scl = 0.8;\r\n\r\n    p.preload = () => {\r\n      fileList.forEach(fp => {\r\n        filterShaders.push(p.loadShader(fp[\"vert\"], fp[\"frag\"]));\r\n      });\r\n    };\r\n\r\n    p.windowResized = () => {\r\n      canvas = p.resizeCanvas(p.windowWidth * scl, p.windowHeight * scl, p.WEBGL);\r\n    }\r\n\r\n    p.setup = () => {\r\n      // メインキャンバスの作成\r\n      canvas = p.createCanvas(p.windowWidth * scl, p.windowHeight * scl, p.WEBGL);\r\n\r\n      // 仮想キャンバスの作成\r\n      // pg = p5.createGraphics(p5.width, p5.height);\r\n\r\n      // Webカメラのキャプチャ開始\r\n      capture = p.createCapture(p.VIDEO);\r\n      capture.hide();\r\n    };\r\n\r\n    p.draw = () => {\r\n      p.shader(filterShaders[shaderIndex]);\r\n\r\n      filterShaders[shaderIndex].setUniform(\"u_time\", p.frameCount / 100);\r\n      filterShaders[shaderIndex].setUniform(\"u_Resolution\", [p.width, p.height]);\r\n\r\n      filterShaders[shaderIndex].setUniform(\"u_tex\", capture);\r\n\r\n      // filterShaders.setUniform('u_color0', normalizeColors[0]);\r\n      // filterShaders.setUniform('u_color1', normalizeColors[1]);\r\n      // filterShaders.setUniform('u_color2', normalizeColors[2]);\r\n      // filterShaders.setUniform('u_color3', normalizeColors[3]);\r\n      // filterShaders.setUniform('u_color4', normalizeColors[4]);\r\n\r\n      p.rect(0, 0, p.width, p.height);\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return <div ref={this.sketchRef}></div>;\r\n  }\r\n}\r\n\r\nexport function saveImage() {\r\n  p5.saveCanvas(canvas);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}